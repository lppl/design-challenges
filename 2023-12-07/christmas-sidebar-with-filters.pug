- const filterGroups = [{"name": "Categories", "values": [{"name": "Cookies", "value": "categories__cookies"},{"name": "Candies", "value": "categories__candies"},{"name": "Ornaments", "value": "categories__ornaments"},{"name": "Accessories", "value": "categories__accessories"}]}, {"name": "Colors", "values": [{"name": "Red", "value": "categories__red"},{"name": "White", "value": "colors__white"},{"name": "Green", "value": "colors__green"},{"name": "Brown", "value": "colors__brown"}]}, {"name": "Size", "values": [{"name": "Small", "value": "size__small"},{"name": "Medium", "value": "size__medium"},{"name": "Large", "value": "size__large"}]}]
- const checked = ["size__small", 'categories__ornaments', 'colors__green']
- const activeFilters = filterGroups.map(({name, values}) => ({name, values: values.filter((f) => checked.includes(f.value) )}))

mixin activeFilter(category, filter)
  button(
    class=[
      "group relative",
      "flex flex-nowrap flex-row items-center",
      "text-blue-800 text-sm leading-relaxed",
      "rounded-lg bg-blue-300 border border-blue-600",
      "gap-2 px-2",
      "hover:bg-amber-300"
    ],
    value=filter.value
    data-event-click="remove-filter"
    style=`view-transition-name=active-filter-${filter.value}`
  )
    span.pointer-events-none=`${category.name}: ${filter.name}`
    span.pointer-events-none.block.invisible.absolute.-right-1.-top-1.bg-red-700.rounded-full.z-10(class="group-hover:visible")
      svg.w-3.h-3.text-red(xmlns='http://www.w3.org/2000/svg' fill='none' viewbox='0 0 24 24' stroke-width='1.5' stroke='currentColor')
        path(stroke-linecap='round' stroke-linejoin='round' d='M6 18L18 6M6 6l12 12')

html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title Christmas sidebar with filters
    link(rel="stylesheet" href="./dist/custom-tailwind.css")
    style.
      ::view-transition-group(*) {
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
      }
      ::view-transition-group-new(*) {
        animation-duration: 100ms;
        animation-delay: 100ms;
      }
      ::view-transition-group-old(*) {
        animation-duration: 100ms;
      }
  body.p-8
    nav#filter-sidebar.p-5.flex-col.gap-4.bg-blue-100(style="view-transition-name:nav")
      div#active-filters.flex.flex-row.flex-wrap.gap-1(style="view-transition-name:nav-active-filters")
        each category in activeFilters
          each filter in category.values
            +activeFilter(category, filter)
      div#filters(style="view-transition-name:nav-filters")
        each group in filterGroups
          h4.my-3.font-bold= group.name
          ul.flex.flex-col.flex-gap-2
            each filter in group.values
              - const id = `filter-${filter.value}`
              li
                label(for=id).flex.flex-row.flex-nowrap.gap-2
                  input(
                    id=id
                    type="checkbox"
                    checked=checked.includes(filter.value)
                    value=filter.value
                    data-event-change="toggle-filter"
                    data-category-name=group.name
                    data-filter-name=filter.name
                  )
                  span=filter.name
    template#active-filter-template
      +activeFilter(
        { name: "{categoryName}" },
        { name: "{filterName}", value: "{filterValue}" })
    script(type="module", src="./filters.js")